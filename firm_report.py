# Form implementation generated from reading ui file 'firm_report.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
import os
import sys
import sqlite3  # Changed from mysql.connector to sqlite3

from PyQt6 import QtCore, QtGui, QtWidgets

# Function to get the absolute path to resources, works for development and PyInstaller
def resource_path(relative_path):
    """ Get absolute path to resource, works for dev and for PyInstaller """
    try:
        # PyInstaller creates a temp folder and stores path in _MEIPASS
        base_path = sys._MEIPASS2
    except Exception:
        base_path = os.path.abspath(".")

    return os.path.join(base_path, relative_path)

class Ui_report(object):
    assets = None
    cash_flow = None
    members = None
    bankrupt = None
    bad_debt = None
    loans = None

    def setupUi(self, reportFrame):
        reportFrame.setObjectName("reportFrame")
        reportFrame.resize(859, 600)
        self.horizontalLayout = QtWidgets.QHBoxLayout(reportFrame)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.widget = QtWidgets.QWidget(parent=reportFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.widget.sizePolicy().hasHeightForWidth())
        self.widget.setSizePolicy(sizePolicy)
        self.widget.setMinimumSize(QtCore.QSize(0, 0))
        self.widget.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.widget.setStyleSheet("#widget\n"
"{\n"
"border:2px solid gray;\n"
"border-radius:50px;\n"
"}")
        self.widget.setObjectName("widget")
        self.gridLayout = QtWidgets.QGridLayout(self.widget)
        self.gridLayout.setHorizontalSpacing(20)
        self.gridLayout.setVerticalSpacing(0)
        self.gridLayout.setObjectName("gridLayout")
        self.label = QtWidgets.QLabel(parent=self.widget)
        self.label.setMaximumSize(QtCore.QSize(16777215, 37))
        self.label.setStyleSheet("border:none;\n"
"background:none;\n"
"font: 700 20pt \"Verdana\";\n"
"color:#653C87;")
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 1, 1, 1, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.pushButton_5 = QtWidgets.QPushButton(parent=self.widget)
        self.pushButton_5.setMinimumSize(QtCore.QSize(0, 0))
        self.pushButton_5.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setPointSize(-1)
        font.setBold(True)
        font.setUnderline(False)
        font.setStrikeOut(False)
        self.pushButton_5.setFont(font)
        self.pushButton_5.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.pushButton_5.setStyleSheet("/* Base button style */\n"
"QPushButton {\n"
"    background-color: #A8A2AB;  /* Green */\n"
"    border: none;\n"
"    color: white;\n"
"  \n"
"    text-align: center;\n"
"    text-decoration: none;\n"
"    display: inline-block;\n"
"    font-size: 20px;\n"
"    margin: 4px 2px;\n"
"    transition: all 0.3s ease;  /* Smooth transition for all properties */\n"
"    cursor: pointer;\n"
"    border-radius: 12px;  /* Rounded corners */\n"
"}\n"
"\n"
"/* Button hover effect */\n"
"QPushButton:hover {\n"
"    transform: scale(1.1);  /* Scale effect on hover */\n"
"}\n"
"\n"
"/* Button click effect */\n"
"QPushButton:pressed {\n"
"    transform: scale(0.9);  /* Scale down effect on press */\n"
"    background-color: #E6D7FA;  /* Slight color change on press */\n"
"}\n"
"\n"
"")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(resource_path("image/assets.png")), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.pushButton_5.setIcon(icon)
        self.pushButton_5.setIconSize(QtCore.QSize(80, 75))
        self.pushButton_5.setObjectName("pushButton_5")
        self.gridLayout.addWidget(self.pushButton_5, 1, 0, 1, 1)
        self.pushButton_6 = QtWidgets.QPushButton(parent=self.widget)
        self.pushButton_6.setMinimumSize(QtCore.QSize(0, 0))
        self.pushButton_6.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setPointSize(-1)
        font.setBold(True)
        font.setUnderline(False)
        font.setStrikeOut(False)
        self.pushButton_6.setFont(font)
        self.pushButton_6.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.pushButton_6.setStyleSheet("/* Base button style */\n"
"QPushButton {\n"
"    background-color: #A8A2AB;  /* Green */\n"
"    border: none;\n"
"    color: white;\n"
"  \n"
"    text-align: center;\n"
"    text-decoration: none;\n"
"    display: inline-block;\n"
"    font-size: 20px;\n"
"    margin: 4px 2px;\n"
"    transition: all 0.3s ease;  /* Smooth transition for all properties */\n"
"    cursor: pointer;\n"
"    border-radius: 12px;  /* Rounded corners */\n"
"}\n"
"\n"
"/* Button hover effect */\n"
"QPushButton:hover {\n"
"    transform: scale(1.1);  /* Scale effect on hover */\n"
"}\n"
"\n"
"/* Button click effect */\n"
"QPushButton:pressed {\n"
"    transform: scale(0.9);  /* Scale down effect on press */\n"
"    background-color: #E6D7FA;  /* Slight color change on press */\n"
"}\n"
"\n"
"")
        icon.addPixmap(QtGui.QPixmap(resource_path("image/cash.png")), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.pushButton_6.setIcon(icon)
        self.pushButton_6.setIconSize(QtCore.QSize(80, 75))
        self.pushButton_6.setObjectName("pushButton_6")
        self.gridLayout.addWidget(self.pushButton_6, 1, 1, 1, 1)
        self.pushButton_7 = QtWidgets.QPushButton(parent=self.widget)
        self.pushButton_7.setMinimumSize(QtCore.QSize(0, 0))
        self.pushButton_7.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setPointSize(-1)
        font.setBold(True)
        font.setUnderline(False)
        font.setStrikeOut(False)
        icon.addPixmap(QtGui.QPixmap(resource_path("image/user.png")), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.pushButton_7.setFont(font)
        self.pushButton_7.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.pushButton_7.setStyleSheet("/* Base button style */\n"
"QPushButton {\n"
"    background-color: #A8A2AB;  /* Green */\n"
"    border: none;\n"
"    color: white;\n"
"  \n"
"    text-align: center;\n"
"    text-decoration: none;\n"
"    display: inline-block;\n"
"    font-size: 20px;\n"
"    margin: 4px 2px;\n"
"    transition: all 0.3s ease;  /* Smooth transition for all properties */\n"
"    cursor: pointer;\n"
"    border-radius: 12px;  /* Rounded corners */\n"
"}\n"
"\n"
"/* Button hover effect */\n"
"QPushButton:hover {\n"
"    transform: scale(1.1);  /* Scale effect on hover */\n"
"}\n"
"\n"
"/* Button click effect */\n"
"QPushButton:pressed {\n"
"    transform: scale(0.9);  /* Scale down effect on press */\n"
"    background-color: #E6D7FA;  /* Slight color change on press */\n"
"}\n"
"\n"
"")

        icon.addPixmap(QtGui.QPixmap(resource_path("image/user.png")), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)

        self.pushButton_7.setIcon(icon)
        self.pushButton_7.setIconSize(QtCore.QSize(80, 75))
        self.pushButton_7.setObjectName("pushButton_7")
        self.gridLayout.addWidget(self.pushButton_7, 1, 2, 1, 1)
        icon.addPixmap(QtGui.QPixmap(resource_path("image/bankruptcy.png")), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)

        self.pushButton_10 = QtWidgets.QPushButton(parent=self.widget)
        self.pushButton_10.setMinimumSize(QtCore.QSize(0, 0))
        self.pushButton_10.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setPointSize(-1)
        font.setBold(True)
        font.setUnderline(False)
        font.setStrikeOut(False)
        self.pushButton_10.setFont(font)
        self.pushButton_10.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.pushButton_10.setStyleSheet("/* Base button style */\n"
"QPushButton {\n"
"    background-color: #A8A2AB;  /* Green */\n"
"    border: none;\n"
"    color: white;\n"
"  \n"
"    text-align: center;\n"
"    text-decoration: none;\n"
"    display: inline-block;\n"
"    font-size: 20px;\n"
"    margin: 4px 2px;\n"
"    transition: all 0.3s ease;  /* Smooth transition for all properties */\n"
"    cursor: pointer;\n"
"    border-radius: 12px;  /* Rounded corners */\n"
"}\n"
"\n"
"/* Button hover effect */\n"
"QPushButton:hover {\n"
"    transform: scale(1.1);  /* Scale effect on hover */\n"
"}\n"
"\n"
"/* Button click effect */\n"
"QPushButton:pressed {\n"
"    transform: scale(0.9);  /* Scale down effect on press */\n"
"    background-color: #E6D7FA;  /* Slight color change on press */\n"
"}\n"
"\n"
"")
        self.pushButton_10.setIcon(icon)
        self.pushButton_10.setIconSize(QtCore.QSize(80, 75))
        self.pushButton_10.setObjectName("pushButton_10")
        icon.addPixmap(QtGui.QPixmap(resource_path("image/baddebt.png")), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)

        self.gridLayout.addWidget(self.pushButton_10, 2, 0, 1, 1)
        self.pushButton_9 = QtWidgets.QPushButton(parent=self.widget)
        self.pushButton_9.setMinimumSize(QtCore.QSize(0, 0))
        self.pushButton_9.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setPointSize(-1)
        font.setBold(True)
        font.setUnderline(False)
        font.setStrikeOut(False)
        self.pushButton_9.setFont(font)
        self.pushButton_9.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.pushButton_9.setStyleSheet("/* Base button style */\n"
"QPushButton {\n"
"    background-color: #A8A2AB;  /* Green */\n"
"    border: none;\n"
"    color: white;\n"
"  \n"
"    text-align: center;\n"
"    text-decoration: none;\n"
"    display: inline-block;\n"
"    font-size: 20px;\n"
"    margin: 4px 2px;\n"
"    transition: all 0.3s ease;  /* Smooth transition for all properties */\n"
"    cursor: pointer;\n"
"    border-radius: 12px;  /* Rounded corners */\n"
"}\n"
"\n"
"/* Button hover effect */\n"
"QPushButton:hover {\n"
"    transform: scale(1.1);  /* Scale effect on hover */\n"
"}\n"
"\n"
"/* Button click effect */\n"
"QPushButton:pressed {\n"
"    transform: scale(0.9);  /* Scale down effect on press */\n"
"    background-color: #E6D7FA;  /* Slight color change on press */\n"
"}\n"
"\n"
"")
        self.pushButton_9.setIcon(icon)
        self.pushButton_9.setIconSize(QtCore.QSize(80, 75))
        self.pushButton_9.setObjectName("pushButton_9")
        icon.addPixmap(QtGui.QPixmap(resource_path("image/loan.png")), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)

        self.gridLayout.addWidget(self.pushButton_9, 2, 1, 1, 1)
        self.pushButton_8 = QtWidgets.QPushButton(parent=self.widget)
        self.pushButton_8.setMinimumSize(QtCore.QSize(0, 0))
        self.pushButton_8.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setPointSize(-1)
        font.setBold(True)
        font.setUnderline(False)
        font.setStrikeOut(False)
        self.pushButton_8.setFont(font)
        self.pushButton_8.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.pushButton_8.setStyleSheet("/* Base button style */\n"
"QPushButton {\n"
"    background-color: #A8A2AB;  /* Green */\n"
"    border: none;\n"
"    color: white;\n"
"  \n"
"    text-align: center;\n"
"    text-decoration: none;\n"
"    display: inline-block;\n"
"    font-size: 20px;\n"
"    margin: 4px 2px;\n"
"    transition: all 0.3s ease;  /* Smooth transition for all properties */\n"
"    cursor: pointer;\n"
"    border-radius: 12px;  /* Rounded corners */\n"
"}\n"
"\n"
"/* Button hover effect */\n"
"QPushButton:hover {\n"
"    transform: scale(1.1);  /* Scale effect on hover */\n"
"}\n"
"\n"
"/* Button click effect */\n"
"QPushButton:pressed {\n"
"    transform: scale(0.9);  /* Scale down effect on press */\n"
"    background-color: #E6D7FA;  /* Slight color change on press */\n"
"}\n"
"\n"
"")
        self.pushButton_8.setIcon(icon)
        self.pushButton_8.setIconSize(QtCore.QSize(80, 75))
        self.pushButton_8.setObjectName("pushButton_8")
        self.gridLayout.addWidget(self.pushButton_8, 2, 2, 1, 1)
        self.horizontalLayout.addWidget(self.widget)

        self.retranslateUi(reportFrame)
        QtCore.QMetaObject.connectSlotsByName(reportFrame)

    def retranslateUi(self, reportFrame):
        self.count()
        _translate = QtCore.QCoreApplication.translate
        reportFrame.setWindowTitle(_translate("reportFrame", "Frame"))
        self.label.setText(_translate("reportFrame", "Firm Report"))
        self.pushButton_5.setText(_translate("reportFrame", f"Total Assets           \n{self.assets}"))
        self.pushButton_6.setText(_translate("reportFrame", f"Total Cash Flow         \n{self.cash_flow}"))
        self.pushButton_7.setText(_translate("reportFrame", f"Total Members           \n{self.members}"))
        self.pushButton_10.setText(
            _translate("reportFrame", f"Total Bankrupt \n Individuals           \n{self.bankrupt}"))
        self.pushButton_9.setText(_translate("reportFrame", f"Total Bad Debt           \n{self.bad_debt}"))
        self.pushButton_8.setText(_translate("reportFrame", f"Total Loans           \n{self.loans}"))

    def count(self):
        try:
            # Connect to SQLite database
            con = sqlite3.connect(resource_path('db/firm_management.db'))
            cursor = con.cursor()

            # Count the number of members
            cursor.execute("SELECT COUNT(*) FROM addmember")
            result = cursor.fetchone()
            self.members = result[0] if result[0] is not None else 0  # Default to 0 if None

            # Count the number of bankrupt individuals
            cursor.execute("SELECT COUNT(*) FROM bankrupt")
            result = cursor.fetchone()
            self.bankrupt = result[0] if result[0] is not None else 0  # Default to 0 if None

            # Sum of bad debt amounts
            cursor.execute("SELECT SUM(amount) FROM bad_dept")
            result = cursor.fetchone()
            self.bad_debt = result[0] if result[0] is not None else 0  # Default to 0 if None

            # Sum of loan amounts
            cursor.execute("SELECT SUM(amount) FROM loan")
            result = cursor.fetchone()
            self.loans = result[0] if result[0] is not None else 0  # Default to 0 if None

            # Sum of funds (absolute value)
            cursor.execute("SELECT SUM(ABS(funds)) FROM funds")
            result = cursor.fetchone()
            self.cash_flow = result[0] if result[0] is not None else 0  # Default to 0 if None
            self.cash_flow -= self.loans  # Subtract loans from cash flow

            # Sum of positive funds
            cursor.execute("SELECT SUM(funds) FROM funds WHERE funds >= 0")
            result = cursor.fetchone()
            self.assets = result[0] if result[0] is not None else 0  # Default to 0 if None
            self.assets += self.loans + self.bad_debt  # Add loans and bad debt to assets

        except Exception as e:
            print(f"Error this is exception: {e}")
        finally:
            if con:
                cursor.close()
                con.close()