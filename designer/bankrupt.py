# Form implementation generated from reading ui file 'bankrupt.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
import os
import sqlite3  # Changed from mysql.connector to sqlite3
import sys

from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QMessageBox

def resource_path(relative_path):
    """ Get absolute path to resource, works for dev and for PyInstaller """
    try:
        # PyInstaller creates a temp folder and stores path in _MEIPASS
        base_path = sys._MEIPASS2
    except Exception:
        base_path = os.path.abspath(".")

    return os.path.join(base_path, relative_path)
class Ui_bank(object):
    def setupUi(self, Frame):
        Frame.setObjectName("Frame")
        Frame.resize(965, 672)
        self.verticalLayout = QtWidgets.QVBoxLayout(Frame)
        self.verticalLayout.setObjectName("verticalLayout")
        self.frame = QtWidgets.QFrame(parent=Frame)
        self.frame.setStyleSheet("QFrame:addmember{\n"
                                 "border:none;\n"
                                 "}\n"
                                 "QLabel {\n"
                                 "\n"
                                 "    background-color: #E6D7FA;\n"
                                 "    color: #653C87;\n"
                                 "    font-family: \'Segoe UI\', sans-serif;\n"
                                 "    font-size: 16px;\n"
                                 "    font-weight: 600;\n"
                                 "    padding: 8px;\n"
                                 "    border: 2px solid #653C87;\n"
                                 "    border-radius: 10px;\n"
                                 "    transition: background-color 0.3s ease, border-color 0.3s ease;\n"
                                 "}\n"
                                 "\n"
                                 "QLabel:hover {\n"
                                 "    background-color: #D4C2EF;  /* Slightly darker background on hover */\n"
                                 "    border-color: #553075;  /* Darker border on hover */\n"
                                 "}\n"
                                 "\n"
                                 "QLineEdit {\n"
                                 "    border: 2px solid #9A79BA;\n"
                                 "    border-radius: 10px;\n"
                                 "    padding: 8px;\n"
                                 "    font-family: \'Segoe UI\', sans-serif;\n"
                                 "    font-size: 20px;\n"
                                 "    color: #653C87;\n"
                                 "    background-color: #FFFFFF;\n"
                                 "    transition: background-color 0.3s ease, border-color 0.3s ease;\n"
                                 "}\n"
                                 "\n"
                                 "QLineEdit:hover {\n"
                                 "    background-color: #F5F0FA;  /* Slightly lighter background on hover */\n"
                                 "}\n"
                                 "\n"
                                 "QLineEdit:focus {\n"
                                 "    border: 2px solid #653C87;  /* Darker border on focus */\n"
                                 "    background-color: #F5F5F5;  /* Slightly lighter background on focus */\n"
                                 "}\n"
                                 "")
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.frame)
        self.verticalLayout_2.setContentsMargins(-1, 0, -1, -1)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.frame_3 = QtWidgets.QFrame(parent=self.frame)
        self.frame_3.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_3.setObjectName("frame_3")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame_3)
        self.horizontalLayout.setContentsMargins(0, 0, 20, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.frame_5 = QtWidgets.QFrame(parent=self.frame_3)
        self.frame_5.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_5.setObjectName("frame_5")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frame_5)
        self.horizontalLayout_3.setContentsMargins(44, 0, 70, -1)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.frame_4 = QtWidgets.QFrame(parent=self.frame_5)
        self.frame_4.setMinimumSize(QtCore.QSize(308, 0))
        self.frame_4.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_4.setObjectName("frame_4")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.frame_4)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.frame_2 = QtWidgets.QFrame(parent=self.frame_4)
        self.frame_2.setMaximumSize(QtCore.QSize(16777215, 80))
        self.frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_2.setObjectName("frame_2")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.frame_2)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setSpacing(0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.labelheading = QtWidgets.QLabel(parent=self.frame_2)
        self.labelheading.setStyleSheet("#labelheading{\n"
                                        "    font: 700 30pt \"Segoe UI\";\n"
                                        "background:none;\n"
                                        "border:none;\n"
                                        "    \n"
                                        "}")
        self.labelheading.setObjectName("labelheading")
        self.verticalLayout_4.addWidget(self.labelheading, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.verticalLayout_3.addWidget(self.frame_2)
        self.frame_7 = QtWidgets.QFrame(parent=self.frame_4)
        self.frame_7.setMinimumSize(QtCore.QSize(303, 0))
        self.frame_7.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_7.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_7.setObjectName("frame_7")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.frame_7)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.frame_11 = QtWidgets.QFrame(parent=self.frame_7)
        self.frame_11.setMaximumSize(QtCore.QSize(16777215, 62))
        self.frame_11.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_11.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_11.setObjectName("frame_11")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.frame_11)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.label_17 = QtWidgets.QLabel(parent=self.frame_11)
        self.label_17.setMinimumSize(QtCore.QSize(142, 0))
        self.label_17.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.label_17.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_17.setObjectName("label_17")
        self.horizontalLayout_7.addWidget(self.label_17)
        self.lineEdit_14 = QtWidgets.QLineEdit(parent=self.frame_11)
        self.lineEdit_14.setMinimumSize(QtCore.QSize(220, 0))
        self.lineEdit_14.setObjectName("lineEdit_14")
        self.horizontalLayout_7.addWidget(self.lineEdit_14)
        self.verticalLayout_5.addWidget(self.frame_11)
        self.frame_9 = QtWidgets.QFrame(parent=self.frame_7)
        self.frame_9.setMaximumSize(QtCore.QSize(16777215, 62))
        self.frame_9.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_9.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_9.setObjectName("frame_9")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.frame_9)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.label_6 = QtWidgets.QLabel(parent=self.frame_9)
        self.label_6.setMinimumSize(QtCore.QSize(142, 0))
        self.label_6.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.label_6.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.horizontalLayout_5.addWidget(self.label_6)
        self.lineEdit_4 = QtWidgets.QLineEdit(parent=self.frame_9)
        self.lineEdit_4.setMinimumSize(QtCore.QSize(220, 0))
        self.lineEdit_4.setMaximumSize(QtCore.QSize(387, 16777215))
        self.lineEdit_4.setStyleSheet("")
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.horizontalLayout_5.addWidget(self.lineEdit_4)
        self.verticalLayout_5.addWidget(self.frame_9)
        self.fframe_6 = QtWidgets.QFrame(parent=self.frame_7)
        self.fframe_6.setMinimumSize(QtCore.QSize(0, 0))
        self.fframe_6.setMaximumSize(QtCore.QSize(16777215, 93))
        self.fframe_6.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fframe_6.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fframe_6.setObjectName("fframe_6")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.fframe_6)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.pushButton_2 = QtWidgets.QPushButton(parent=self.fframe_6)
        self.pushButton_2.setMinimumSize(QtCore.QSize(0, 0))
        self.pushButton_2.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.pushButton_2.clicked.connect(self.in_bankrupt)
        self.pushButton_2.setStyleSheet("QPushButton {\n"
                                        "    background-color: #653C87; /* Dark purple background */\n"
                                        "    color: #FFFFFF; /* White text */\n"
                                        "    font-family: \'Segoe UI\', sans-serif; /* Font family */\n"
                                        "    font-size: 14px; /* Font size */\n"
                                        "    font-weight: bold; /* Bold text */\n"
                                        "    padding: 10px 20px; /* Padding */\n"
                                        "    border: 2px solid #9A79BA; /* Light purple border */\n"
                                        "    border-radius: 10px; /* Rounded corners */\n"
                                        "    transition: background-color 0.3s ease, border-color 0.3s ease; /* Smooth transition */\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:hover {\n"
                                        "    background-color: #9A79BA; /* Light purple background on hover */\n"
                                        "    border-color: #653C87; /* Dark purple border on hover */\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:pressed {\n"
                                        "    background-color: #E6D7FA; /* Lightest purple background on press */\n"
                                        "    border-color: #553075; /* Darker purple border on press */\n"
                                        "}\n"
                                        "")
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout_2.addWidget(self.pushButton_2)
        self.pushButton_4 = QtWidgets.QPushButton(parent=self.fframe_6)
        self.pushButton_4.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.pushButton_4.clicked.connect(self.de_bankrupt)

        self.pushButton_4.setStyleSheet("QPushButton {\n"
                                        "    background-color: #653C87; /* Dark purple background */\n"
                                        "    color: #FFFFFF; /* White text */\n"
                                        "    font-family: \'Segoe UI\', sans-serif; /* Font family */\n"
                                        "    font-size: 14px; /* Font size */\n"
                                        "    font-weight: bold; /* Bold text */\n"
                                        "    padding: 10px 20px; /* Padding */\n"
                                        "    border: 2px solid #9A79BA; /* Light purple border */\n"
                                        "    border-radius: 10px; /* Rounded corners */\n"
                                        "    transition: background-color 0.3s ease, border-color 0.3s ease; /* Smooth transition */\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:hover {\n"
                                        "    background-color: #9A79BA; /* Light purple background on hover */\n"
                                        "    border-color: #653C87; /* Dark purple border on hover */\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:pressed {\n"
                                        "    background-color: #E6D7FA; /* Lightest purple background on press */\n"
                                        "    border-color: #553075; /* Darker purple border on press */\n"
                                        "}\n"
                                        "")
        self.pushButton_4.setObjectName("pushButton_4")
        self.horizontalLayout_2.addWidget(self.pushButton_4)
        self.verticalLayout_5.addWidget(self.fframe_6)
        self.verticalLayout_3.addWidget(self.frame_7)
        self.horizontalLayout_3.addWidget(self.frame_4, 0, QtCore.Qt.AlignmentFlag.AlignRight)
        self.frame_8 = QtWidgets.QFrame(parent=self.frame_5)
        self.frame_8.setMinimumSize(QtCore.QSize(356, 0))
        self.frame_8.setMaximumSize(QtCore.QSize(354, 16777215))
        self.frame_8.setStyleSheet("QFrame{\n"
                                   "border: 2px solid #000;  /* Adds a 2px solid black border */\n"
                                   "    border-radius: 0px;     /* Optional: Adds rounded corners */\n"
                                   "    background-color: #653C87;  /* Optional: Adds a background color */\n"
                                   "}")
        self.frame_8.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_8.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_8.setObjectName("frame_8")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.frame_8)
        self.verticalLayout_6.setContentsMargins(9, 9, 9, 3)
        self.verticalLayout_6.setSpacing(3)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.lineEdit_2 = QtWidgets.QLineEdit(parent=self.frame_8)
        self.lineEdit_2.setPlaceholderText("Search")
        self.lineEdit_2.setMinimumSize(QtCore.QSize(0, 35))
        self.lineEdit_2.setPlaceholderText("search here...")  # Set placeholder text

        self.lineEdit_2.setStyleSheet("QLabel {\n"
                                      "    background-color: #ffffff; /* White background */\n"
                                      "    border: 2px solid black; /* Green border */\n"
                                      "    border-radius: 10px; /* Rounded corners */\n"
                                      "    padding: 10px; /* Padding */\n"
                                      "    font-family: \'Arial\', sans-serif; /* Font family */\n"
                                      "    font-size: 20px; /* Font size */\n"
                                      "    transition: all 0.3s ease; /* Smooth transition for hover effect */\n"
                                      "}\n"
                                      "\n"
                                      "QLabel:hover {\n"
                                      "    background-color: #f0f0f0; /* Light grey background on hover */\n"
                                      "    border-color: #3e8e41; /* Darker green border on hover */\n"
                                      "    color: #000000; /* Black text color on hover */\n"
                                      "}\n"
                                      "\n"
                                      "QLineEdit {\n"
                                      "    background-color: #ffffff; /* White background */\n"
                                      "    border: 2px solid black; /* Green border */\n"
                                      "    border-radius: 10px; /* Rounded corners */\n"
                                      "    padding: 10px; /* Padding */\n"
                                      "    font-family: \'Arial\', sans-serif; /* Font family */\n"
                                      "    font-size: 20px; /* Font size */\n"
                                      "    transition: all 0.3s ease; /* Smooth transition */\n"
                                      "}\n"
                                      "\n"
                                      "QLineEdit:focus {\n"
                                      "    border-color: gray; /* Darker green border on focus */\n"
                                      "}\n"
                                      "")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_2.textChanged.connect(self.search_bank)

        self.verticalLayout_6.addWidget(self.lineEdit_2)
        self.tableWidget_2 = QtWidgets.QTableWidget(parent=self.frame_8)
        self.tableWidget_2.setMinimumSize(QtCore.QSize(0, 0))
        self.tableWidget_2.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.tableWidget_2.setStyleSheet("QTableWidget {\n"
                                         "    border: 1px solid #888888; /* Green border for the table */\n"
                                         "    border-radius: 10px; /* Rounded corners */\n"
                                         "    background-color: #f0f0f0; /* Light grey background */\n"
                                         "    font-family: \'Arial\', sans-serif; /* Font for the table cells */\n"
                                         "    font-size: 16px; /* Font size for the table cells */\n"
                                         "}\n"
                                         "\n"
                                         "QTableWidget::item {\n"
                                         "    border: 1px solid #888888; /* Grey border for each cell */\n"
                                         "    padding: 5px; /* Padding inside each cell */\n"
                                         "    margin: 1px; /* Margin between cells */\n"
                                         "    font-family: \'Arial\', sans-serif; /* Font for the table cells */\n"
                                         "    font-size: 16px; /* Font size for the table cells */\n"
                                         "}\n"
                                         "\n"
                                         "QHeaderView::section {\n"
                                         "    background-color: #A8A2AB; /* Green header background */\n"
                                         "    color: white; /* White text in the header */\n"
                                         "    padding: 4px; /* Padding in header cells */\n"
                                         "    border: 1px solid #dddddd; /* Border for header cells */\n"
                                         "    font-family: \'Verdana\', sans-serif; /* Font for the header */\n"
                                         "    font-size: 16px; /* Font size for the header */\n"
                                         "    font-weight: bold; /* Bold font for the header */\n"
                                         "\n"
                                         "}\n"
                                         "            QScrollBar:vertical {\n"
                                         "                \n"
                                         "                background: #653C87;\n"
                                         "                \n"
                                         "         \n"
                                         "            }\n"
                                         "\n"
                                         "")
        self.tableWidget_2.setLineWidth(1)
        self.tableWidget_2.setMidLineWidth(0)
        self.tableWidget_2.setAutoScrollMargin(16)
        self.tableWidget_2.setTextElideMode(QtCore.Qt.TextElideMode.ElideRight)
        self.tableWidget_2.setShowGrid(False)
        self.tableWidget_2.setWordWrap(True)
        self.tableWidget_2.setRowCount(18)
        self.tableWidget_2.setColumnCount(2)
        self.tableWidget_2.setObjectName("tableWidget_2")
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(11, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(12, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(13, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(14, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(15, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(16, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(17, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(8)
        item.setFont(font)
        self.tableWidget_2.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setItem(6, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setItem(6, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setItem(7, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setItem(7, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setItem(8, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setItem(8, 1, item)
        self.tableWidget_2.horizontalHeader().setVisible(True)
        self.tableWidget_2.horizontalHeader().setDefaultSectionSize(100)
        self.tableWidget_2.horizontalHeader().setMinimumSectionSize(21)
        self.tableWidget_2.horizontalHeader().setSortIndicatorShown(False)
        self.tableWidget_2.horizontalHeader().setStretchLastSection(True)
        self.verticalLayout_6.addWidget(self.tableWidget_2)
        self.horizontalLayout_3.addWidget(self.frame_8)
        self.horizontalLayout.addWidget(self.frame_5)
        self.verticalLayout_2.addWidget(self.frame_3)
        self.verticalLayout.addWidget(self.frame)

        self.retranslateUi(Frame)
        QtCore.QMetaObject.connectSlotsByName(Frame)

    def search_bank(self, search_text):
            """
            Searches the table for the given search text and displays the matching results.
            """
            # Get the search text from the lineEdit_2
            search_text = search_text.lower()

            # Iterate through the table rows and columns
            for row in range(self.tableWidget_2.rowCount()):
                    # Assume the row should be hidden initially
                    row_visible = False

                    for col in range(self.tableWidget_2.columnCount()):
                            # Get the item at the current row and column
                            item = self.tableWidget_2.item(row, col)
                            if item:
                                    # Convert the item text to lowercase for case-insensitive search
                                    item_text = item.text().lower()
                                    # Check if the search text is in the item text
                                    if search_text in item_text:
                                            # If the search text is found in any cell, the row should be visible
                                            row_visible = True
                                            break  # No need to check other cells in this row

                    # Set the row visibility based on whether the search text was found
                    self.tableWidget_2.setRowHidden(row, not row_visible)

    def retranslateUi(self, Frame):
        _translate = QtCore.QCoreApplication.translate
        Frame.setWindowTitle(_translate("Frame", "Frame"))
        self.labelheading.setText(_translate("Frame", "Bankrupt"))
        self.label_17.setText(_translate("Frame", "Username"))
        self.label_6.setText(_translate("Frame", "Aadharnumber"))
        self.pushButton_2.setText(_translate("Frame", "Save"))
        self.pushButton_4.setText(_translate("Frame", "Delete"))

        item = self.tableWidget_2.horizontalHeaderItem(0)
        item.setText(_translate("Frame", "Name"))
        item = self.tableWidget_2.horizontalHeaderItem(1)
        item.setText(_translate("Frame", "Aadhar"))
        __sortingEnabled = self.tableWidget_2.isSortingEnabled()
        self.tableWidget_2.setSortingEnabled(False)
        self.display2()

        self.tableWidget_2.setSortingEnabled(__sortingEnabled)

    def display2(self):
        _translate = QtCore.QCoreApplication.translate

        try:
            con = sqlite3.connect(resource_path('db/firm_management.db'))
            # Changed to SQLite connection
            cursor = con.cursor()
            cursor.execute("SELECT username, aadhar FROM bankrupt")
            rows = cursor.fetchall()

            # Clear existing rows in the tableWidget
            self.tableWidget_2.setRowCount(0)

            # Add rows and populate them with data
            for row_data in rows:
                new_row_position = self.tableWidget_2.rowCount()

                # Check if the row already exists
                row_exists = False
                for row in range(self.tableWidget_2.rowCount()):
                    if self.tableWidget_2.item(row, 0) is not None and self.tableWidget_2.item(row, 0).text() == str(row_data[0]):
                        row_exists = True
                        break

                # If row doesn't exist, add it
                if not row_exists:
                    self.tableWidget_2.insertRow(new_row_position)
                    for column, data in enumerate(row_data):
                        item = QtWidgets.QTableWidgetItem(str(data))  # Convert to string
                        self.tableWidget_2.setItem(new_row_position, column, item)

        except sqlite3.Error as e:  # Changed to handle SQLite errors
            print(f"Error: {e}")

        finally:
            if con:
                cursor.close()
                con.close()

    def in_bankrupt(self):
        try:
            # Establish database connection
            con = sqlite3.connect(resource_path('db/firm_management.db'))
            cursor = con.cursor()

            name = self.lineEdit_14.text().strip()
            a_number = self.lineEdit_4.text().strip()

            # Validate Aadhar number
            if len(a_number) != 12 or not a_number.isdigit():
                QMessageBox.warning(None, 'Invalid Input', 'Aadhar number must be 12 digits long.')
                return

            # Check if the Aadhar number exists in the addmember table
            cursor.execute("SELECT COUNT(*) FROM addmember WHERE aadhar = ?", (a_number,))
            exists = cursor.fetchone()[0]

            if exists == 0:
                QMessageBox.warning(None, 'Not a Member', 'The Aadhar number does not exist in the addmember table.')
                return

            # Proceed to insert into bankrupt table
            sql_insert_query = """INSERT INTO bankrupt (username, aadhar, fund) VALUES (?, ?, ?)"""  # Ensure 'fund' is included
            data_tuple = (name, a_number, 0)  # Assuming a default value of 0 for fund

            # Insert the record into the bankrupt table
            cursor.execute(sql_insert_query, data_tuple)

            # Now delete the record from the addmember table
            cursor.execute("SELECT userid FROM addmember WHERE aadhar = ?", (a_number,))
            result = cursor.fetchone()
            if result:
                unique_id = result[0]

                # Step 2: Delete the record from addmember
                cursor.execute("DELETE FROM addmember WHERE aadhar = ?", (a_number,))
                cursor.execute("DELETE FROM entry WHERE u_id = ?", (unique_id,))
                # Step 3: Delete the record from funds using the unique ID
                cursor.execute("DELETE FROM funds WHERE id = ?", (unique_id,))

                cursor.execute("SELECT * FROM loan WHERE unique_n = ?", (unique_id,))
                loan_record = cursor.fetchone()

                if loan_record:
                    cursor.execute("DELETE FROM loan WHERE unique_n = ?", (unique_id,))
                    cursor.execute(
                        "INSERT INTO bad_dept (name, amount) VALUES (?, ?)",
                        (loan_record[2], loan_record[3])
                    )
                con.commit()
                QMessageBox.information(None, 'Success', 'Record of user successfully in bankruptcy.')
                print("Records deleted successfully.")
            else:
                print("No matching record found in addmember.")

            self.display2()
            # Clear the input fields
            self.lineEdit_14.clear()
            self.lineEdit_4.clear()
            self.display2()
        except sqlite3.Error as e:
            print(f"Database Error: {e}")
            QMessageBox.critical(None, 'Database Error', 'An error occurred while accessing the database.')
        except Exception as e:
            print(f"Unexpected Error: {e}")
            QMessageBox.critical(None, 'Unexpected Error', f'An unexpected error occurred: {e}')
        finally:
            if 'cursor' in locals() and cursor:
                cursor.close()
            if 'con' in locals() and con:
                con.close()
                print("SQLite connection is closed")

    def de_bankrupt(self):
        try:
            # Establish database connection
            con = sqlite3.connect(resource_path('db/firm_management.db'))
            cursor = con.cursor()
            self.frame_11.hide()
            a_number = self.lineEdit_4.text().strip()

            # Validate Aadhar number
            if len(a_number) != 12 or not a_number.isdigit():
                QMessageBox.warning(None, 'Invalid Input', 'Aadhar number must be 12 digits long.')
                return

            # Check if the Aadhar number exists in the bankrupt table
            cursor.execute("SELECT COUNT(*) FROM bankrupt WHERE aadhar = ?", (a_number,))
            exists = cursor.fetchone()[0]

            if exists == 0:
                QMessageBox.warning(None, 'Not Found', 'The Aadhar number does not exist in the bankrupt table.')
                return

            # Proceed to delete the record from the bankrupt table
            cursor.execute("DELETE FROM bankrupt WHERE aadhar = ?", (a_number,))
            con.commit()  # Commit the changes

            QMessageBox.information(None, 'Success', 'Record deleted from bankrupt successfully.')
            self.display2()

            # Clear the input field
            self.lineEdit_4.clear()

        except sqlite3.Error as e:
            print(f"Database Error: {e}")
            QMessageBox.critical(None, 'Database Error', 'An error occurred while accessing the database.')
        except Exception as e:
            print(f"Unexpected Error: {e}")
            QMessageBox.critical(None, 'Unexpected Error', f'An unexpected error occurred: {e}')
        finally:
            if 'cursor' in locals() and cursor:
                cursor.close()
            if 'con' in locals() and con:
                con.close()
                print("SQLite connection is closed")